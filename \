#include <stdlib.h>
#include <string.h>
#include "../include/scanner.h"
#include "../include/token.h"

int start = 0;
int current = 0;
int line = 1;

void scanToken(Scanner *scanner) {
  char c = advance(scanner);
  switch(c) {
    case '(': addToken(scanner, LEFT_PAREN); break;
    case ')': addToken(scanner, RIGHT_PAREN); break;
    case '{': addToken(scanner, LEFT_BRACE); break;
    case '}': addToken(scanner, RIGHT_BRACE); break;
    case ',': addToken(scanner, COMMA); break;
    case '.': addToken(scanner, DOT); break;
    case '-': addToken(scanner, MINUS); break;
    case '+': addToken(scanner, PLUS); break;
    case ';': addToken(scanner, SEMICOLON); break;
    case '/': addToken(scanner, SLASH); break;
    case '*': addToken(scanner, STAR); break;
  }
}

char advance(Scanner *scanner) {
  return scanner->source[current++];
}

void addToken(Scanner *scanner, TokenType type) {
  addTokenLitral(scanner, type, NULL);
}

void addTokenLiteral(Scanner *scanner, TokenType type, void *literal) {

}

bool isAtEnd(Scanner *scanner) {
  
}

char *substring(char *src, int start, int end) {
  int len = strlen(src); 
  int subtrLen = (end - start) + 1; 
  int curr = start
  char *substr = (char*)malloc((end - start) + 1);
  
  if (!substr) {
    perror("Malloc Failed!");
    return NULL;
  }

  for (int i = 0; i <= end; i++) {
    substr[i] = src[curr];
    curr += 1;
  }

  return substr;
}
